diff -up HandBrake-1.8.2/libhb/decavsub.c.orig HandBrake-1.8.2/libhb/decavsub.c
--- HandBrake-1.8.2/libhb/decavsub.c.orig	2024-08-07 19:31:52.000000000 +0200
+++ HandBrake-1.8.2/libhb/decavsub.c	2024-09-02 12:01:18.949484625 +0200
@@ -29,6 +29,12 @@ struct hb_decavsub_context_s
     //      while this should really get fixed elsewhere,
     //      dropping subtitles should be avoided as much as possible
     int64_t last_pts;
+    // large subtitles (dvd sub, image based for example) can be split
+    // across several packets. avcodec_decode_subtitle2 can return the
+    // pts in a non complete packet (got_sub_ptr == 0). In that case
+    // save the pts and reuse it once all packets were processed and
+    // the subtitle is complete
+    int64_t unused_pts;
     // For PGS subs, we need to pass 'empty' subtitles through (they clear the
     // display) - when doing forced-only extraction, only pass empty subtitles
     // through if we've seen a forced sub since the last empty sub
@@ -57,6 +63,7 @@ hb_decavsub_context_t * decavsubInit( hb
     }
     ctx->seen_forced_sub       = 0;
     ctx->last_pts              = AV_NOPTS_VALUE;
+    ctx->unused_pts            = AV_NOPTS_VALUE;
     ctx->job                   = job;
     ctx->subtitle              = w->subtitle;
 
@@ -387,6 +394,11 @@ int decavsubWork( hb_decavsub_context_t
 
         if (!has_subtitle)
         {
+            if (subtitle.pts != AV_NOPTS_VALUE)
+            {
+                ctx->unused_pts = av_rescale(subtitle.pts, 90000, AV_TIME_BASE) +
+                      av_rescale(subtitle.start_display_time, 90000, 1000);
+            }
             continue;
         }
 
@@ -463,7 +475,11 @@ int decavsubWork( hb_decavsub_context_t
         }
         else
         {
-            if (in_s.start >= 0)
+            if (ctx->unused_pts != AV_NOPTS_VALUE)
+            {
+                pts = ctx->unused_pts;
+            }
+            else if (in_s.start >= 0)
             {
                 pts = in_s.start;
             }
@@ -502,6 +518,7 @@ int decavsubWork( hb_decavsub_context_t
             pts = ctx->last_pts + 1 * 90000LL;
         }
         ctx->last_pts = pts;
+        ctx->unused_pts = AV_NOPTS_VALUE;
 
         if (ctx->subtitle->format == TEXTSUB)
         {
